{"version":3,"sources":["components/MainNav.js","pages/Home.js","pages/Login.js","pages/Register.js","pages/Cart.js","App.js","serviceWorker.js","index.js"],"names":["MainNav","props","state","Object","assign","this","logged_in","className","to","user","name","loginItem","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","placeholder","navRight","Component","Home","Login","handleSubmit","event","preventDefault","setState","error_msg","fetch","method","credentials","headers","body","JSON","stringify","username","password","then","res","a","json","ok","message","onLogin","catch","err","console","error","history","push","attr","target","value","form","onSubmit","required","onChange","e","tabIndex","style","color","maxWidth","errors","passwordsMatch","email","_message","confirm_password","keys","map","i","key","Cart","App","handleLogin","checkLoginStatus","exact","path","component","render","Register","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.897791c5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './MainNav.scss';\n\nclass MainNav extends Component {\n    constructor(props) {\n        super(props);\n        this.state = Object.assign({}, props);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n      return props;\n    }\n\n    loginItem() {\n        if (this.props.logged_in) {\n            return (\n                <li className=\"nav-item\">\n                    <Link to={'./login'} className=\"nav-link\">\n                        {this.props.user.name}\n                    </Link>\n                </li>\n            );\n        }\n\n        return (\n            <li className=\"nav-item\">\n                <Link to={'./login'} className=\"nav-link\">\n                    Login\n                </Link>\n            </li>\n        );\n    }\n\n    navRight() {\n        return (\n            <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                    <Link to={'./cart'} className=\"nav-link\">\n                        Cart\n                    </Link>\n                </li>\n                {this.loginItem()}\n            </ul>\n        );\n    }\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light row\">\n                <Link to={'/'} className=\"navbar-brand\">\n                    Book Geeks\n                </Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <form className=\"form-inline my-2 flex-grow-1\">\n                        <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                    </form>\n                    {this.navRight()}\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default MainNav;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n    <div className=\"row\">\n      <div className=\"col\">\n        <h1>Home</h1>\n      </div>\n    </div>\n    );\n  }\n}\nexport default Home;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Login extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      username: 'test_user',\n      password: 'AbsoluteUnit1134!',\n      error_msg: null,\n      logged_in: props.logged_in || false,\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return props;\n  }\n\n  componentDidUpdate() {\n    if (this.state.logged_in) {\n      this.props.history.push('/');\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState({\n      error_msg: null,\n    });\n\n    fetch('/api/user/login', {\n      method: 'post',\n      credentials: 'include',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password,\n      }),\n    }).then(async (res) => {\n      const body = await res.json();\n      if (!res.ok) {\n        return this.setState({\n          error_msg: body.message,\n        });\n      }\n\n      this.setState({\n        logged_in: true,\n      });\n\n      this.props.onLogin(body); // user\n\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  onChange(attr, event) {\n    this.setState({\n      [attr]: event.target.value,\n    });\n  }\n\n  render() {\n    const form = <form onSubmit={this.handleSubmit}>\n        <div className=\"form-row\">\n          <div className=\"col-12 mb-2\">\n            <input type=\"text\" className=\"form-control\" placeholder=\"Username\" required\n              value={this.state.username} onChange={(e) => this.onChange('username', e)}/>\n          </div>\n          <div className=\"col-12 mb-2\">\n            <input type=\"password\" className=\"form-control\" placeholder=\"Password\" required\n              value={this.state.password} onChange={(e) => this.onChange('password', e)}/>\n          </div>\n          <div className=\"col-6\">\n            <button type=\"submit\" className=\"btn btn-primary btn-block\">Login</button>\n          </div>\n          <div className=\"col-6\">\n            <Link to={'./register'} className=\"btn btn-secondary btn-block\" tabIndex=\"-1\">\n              Register\n            </Link>\n          </div>\n        </div>\n      </form>;\n\n    const message = <span style={{color:'red'}}>{this.state.error_msg}</span>\n\n    const logged_in = <span style={{color:'green'}}>You're logged in</span>\n\n    return (\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"card my-5 mx-auto\" style={{maxWidth: '500px'}}>\n            <div className=\"card-body\">\n              {!this.state.logged_in ? form : null}\n              {this.state.error_msg ? message : null}\n              {this.state.logged_in ? logged_in : null} \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;","import React, { Component } from 'react';\n\nclass Login extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      username: '',\n      name: '',\n      email: '',\n      password: '',\n      confirm_password: '',\n      error_msg: null,\n      errors: {},\n      logged_in: props.logged_in || false,\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return props;\n  }\n\n  componentDidUpdate() {\n    if (this.state.logged_in) {\n      this.props.history.push('/');\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState({\n      error_msg: null,\n      errors: {},\n    });\n\n    if (!this.passwordsMatch()) {\n      return;\n    }\n\n    return fetch('/api/user/signup', {\n      method: 'post',\n      credentials: 'include',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        username: this.state.username,\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n      }),\n    }).then(async (res) => {\n      const body = await res.json();\n      if (!res.ok) {\n        return this.setState({\n          error_msg: body._message,\n          errors: body.errors,\n        });\n      }\n\n      this.setState({\n        logged_in: true,\n      });\n\n      this.props.onLogin(body); // user\n\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  onChange(attr, event) {\n    this.setState({\n      [attr]: event.target.value,\n    });\n  }\n\n  passwordsMatch() {\n      if (!this.state.confirm_password) {\n          return true;\n      }\n      return this.state.password === this.state.confirm_password;\n  }\n\n  render() {\n    const form = <form onSubmit={this.handleSubmit}>\n        <div className=\"form-row\">\n          <div className=\"col-12 mb-2\">\n            <input type=\"text\" className=\"form-control\" placeholder=\"Desired Username\" required\n              value={this.state.username} onChange={(e) => this.onChange('username', e)}/>\n          </div>\n          <div className=\"col-12 mb-2\">\n            <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" required\n              value={this.state.name} onChange={(e) => this.onChange('name', e)}/>\n          </div>\n          <div className=\"col-12 mb-2\">\n            <input type=\"email\" className=\"form-control\" placeholder=\"email@example.com\" required\n              value={this.state.email} onChange={(e) => this.onChange('email', e)}/>\n          </div>\n          <div className=\"col-12 mb-2\">\n            <input type=\"password\" className=\"form-control\" placeholder=\"Password\" required\n              value={this.state.password} onChange={(e) => this.onChange('password', e)}/>\n          </div>\n          <div className=\"col-12 mb-2\">\n            <input type=\"password\" className={`form-control ${this.passwordsMatch() ? '' : 'is-invalid'}`} placeholder=\"Confirm Password\" required\n              value={this.state.confirm_password} onChange={(e) => this.onChange('confirm_password', e)}/>\n              <span className=\"invalid-feedback\">\n                {!this.passwordsMatch() ? 'passwords must match' : ''}\n              </span>\n          </div>\n          <div className=\"col-12\">\n            <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign Me Up</button>\n          </div>\n        </div>\n      </form>;\n\n    const errors = Object.keys(this.state.errors)\n      .map((attr, i) => {\n        return <li key={`${attr}-${i}`}>\n          <strong>{attr}: </strong> {this.state.errors[attr].message}\n        </li>\n      })\n\n    const message = <div className=\"text-danger mt-3\">\n      {this.state.error_msg}\n      <ul className=\"m-0\">{errors}</ul>\n    </div>\n\n    return (\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"card my-5 mx-auto\" style={{maxWidth: '500px'}}>\n            <div className=\"card-body\">\n              {form}\n              {this.state.error_msg ? message : null}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;","import React, { Component } from 'react';\n\nclass Cart extends Component {\n  render() {\n    return (\n    <div className=\"row\">\n      <div className=\"col\">\n        <h1>Cart</h1>\n      </div>\n    </div>\n    );\n  }\n}\nexport default Cart;","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.scss';\nimport MainNav from './components/MainNav';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Cart from './pages/Cart';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      logged_in: false,\n      user: {},\n    }\n  }\n\n  checkLoginStatus() {\n    fetch('/api/user/me', {\n      credentials: 'include',\n    }).then(async (res) => {\n      this.setState({\n        'logged_in': res.ok,\n        user: res.ok ? await res.json() : {},\n      });\n    }).catch((err) => {\n      this.setState({\n        'logged_in': false,\n        user: {},\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.checkLoginStatus();\n  }\n\n  handleLogin = (user) => {\n    this.setState({\n      logged_in: true,\n      user,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <MainNav logged_in={this.state.logged_in} user={this.state.user}/>\n        <div className=\"container main-view\">\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route path='/login'\n                render={(props) => <Login {...props} logged_in={this.state.logged_in} onLogin={this.handleLogin}/>}\n            />\n            <Route path='/register'\n                render={(props) => <Register {...props} onLogin={this.handleLogin}/>}\n            />\n            <Route path='/cart' component={Cart} />\n          </Switch>\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render((\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}